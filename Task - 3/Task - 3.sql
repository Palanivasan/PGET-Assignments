-- 1. Retrieve a list of all orders along with customer information for each order. 

    SELECT c.CustomerID, d.OrderID, c.FirstName, c.LastName, c.Email, c.Phone, c.Address, c.NumberOfOrders
    FROM Customers c
    INNER JOIN Orders d
    ON c.CustomerID = d.CustomerID

-- 2. Find the total revenue generated by each product and include the product name and the total revenue. 

    SELECT p.ProductName, (od.Quantity * p.Price) AS 'Total Revenue'
    FROM Products p
    INNER JOIN OrderDetails od
    ON p.ProductID = od.ProductID
    GROUP BY p.ProductName

-- 3. List all customers who have made at least one purchase. Include their names and contact information.

    SELECT c.CustomerID, d.OrderID, c.FirstName, c.LastName, c.Email, c.Phone, c.Address
    FROM Customers c
    LEFT JOIN Orders d
    ON c.CustomerID = d.CustomerID

-- 4. Find the most popular gadget. Include the product name and the total quantity ordered. 

    SELECT top 1 with ties SUM(od.Quantity) as Quantity, p.ProductName as 'Most Popular Gadget'
	FROM Products p
	JOIN OrderDetails od
	ON p.ProductID = od.ProductID
	GROUP BY p.productName
	ORDER BY Quantity desc

-- 5. Retrieve a list of electronic gadgets along with their corresponding categories.

    ALTER TABLE Products
	ADD Categories Varchar(20)
	 
	UPDATE Products
    SET Categories = 'E-Gadgets'

	SELECT ProductName, Categories
    FROM Products
	GROUP BY Categories, ProductName

-- 6. Calculate the average order value for each customer. Include the customer's name and their average order value.

    SELECT c.FirstName + ' ' + c.LastName AS 'Customer Name', COALESCE(AVG(od.Quantity * p.Price), 0) AS 'Average Order Value'
    FROM Customers c
    LEFT JOIN Orders o ON c.CustomerID = o.CustomerID
    LEFT JOIN OrderDetails od ON o.OrderID = od.OrderID
    LEFT JOIN Products p ON od.ProductID = p.ProductID
    GROUP BY c.CustomerID, c.FirstName, c.LastName
    ORDER BY 'Average Order Value' DESC

-- 7. Find the order with the highest total revenue. Include the order ID, customer information, and the total revenue.

	SELECT top 1 c.FirstName + ' ' + c.LastName AS 'Customer Name', SUM(od.Quantity * p.Price) AS 'Total Revenue', 
	c.Email, c.Phone, c.Address
	FROM Customers c
    LEFT JOIN Orders o ON c.CustomerID = o.CustomerID
    LEFT JOIN OrderDetails od ON o.OrderID = od.OrderID
    LEFT JOIN Products p ON od.ProductID = p.ProductID
    GROUP BY c.CustomerID, c.FirstName, c.LastName,  c.Email, c.Phone, c.Address
    ORDER BY 'Total Revenue' DESC

-- 8. List electronic gadgets and the number of times each product has been ordered.

    SELECT p.ProductName, COUNT(od.OrderID) AS 'Number of times ordered'
    FROM Products p
    JOIN OrderDetails od ON p.ProductID = od.ProductID
    GROUP BY p.ProductName
    ORDER BY 'Number of times ordered' DESC 

-- 9. Find customers who have purchased a specific electronic gadget product.

    SELECT c.CustomerID, c.FirstName + ' ' + c.LastName AS CustomerName, c.Email, c.Phone, c.Address
    FROM Customers c
    JOIN Orders o ON c.CustomerID = o.CustomerID
    JOIN OrderDetails od ON o.OrderID = od.OrderID
    JOIN Products p ON od.ProductID = p.ProductID
    WHERE p.ProductName = 'Laptop' 

-- 10. Calculate the total revenue generated by orders during a specific period.

    SELECT SUM(od.Quantity * p.Price) AS Total_Revenue
    FROM OrderDetails od
	JOIN Products p ON p.ProductID = od.ProductID
	JOIN Orders o ON O.OrderID = od.OrderID
    WHERE o.OrderDate BETWEEN '2025-03-01' AND '2025-03-31'



	






